<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace : xml파일은 여러개일 수 있음. 
이를 구별하기 위한 식별 용도로 사용 -->
<mapper namespace="kr.or.ddit.mapper.NoticeMapper">
	
	 <!-- 공지사항 리스트 & 검색 -->
	 <select id="noticeList" parameterType="hashMap" resultType="noticeVO">
	 	WITH T AS(
			SELECT ROW_NUMBER() OVER (ORDER BY NT_ENDT DESC) RNUM
		 		  , NT_CD
		 		  , NT_TITLE
		 		  , NT_CONT
		 		  , NT_ENDT
		 		  , NT_HIT
		 		  , NT_WT
		 		  , FILE_CD
		 	FROM    NOTICE
			WHERE   1 = 1
			AND		1 = 1
			<if test="keyword != null and keyword != '' ">
				AND (
					NT_TITLE LIKE '%' || #{keyword} || '%'
					OR NT_CONT LIKE '%' || #{keyword} || '%'
					)
			</if>
		)
		SELECT * FROM T
		WHERE T.RNUM BETWEEN #{currentPage} * #{show} - (#{show}-1) AND #{currentPage} * #{show}
	 </select>
	 
	 <!-- 공지사항의 전체 행 수 구하기 -->
	 <select id="getTotal" resultType="int">
		SELECT COUNT(*) FROM NOTICE
		WHERE  1 = 1
		AND	   1 = 1	
		<if test="keyword != null and keyword != '' ">
		AND    (
				NT_TITLE LIKE '%' || #{keyword} || '%'
				OR NT_CONT LIKE '%' || #{keyword} || '%'
				)
		ORDER BY NT_ENDT DESC
		</if>
		
	</select>
	
	 <!-- 공지사항 검색 -->
<!-- 
	 <select id="list" parameterType="noticeVO" resultType="noticeVO">
	
		SELECT NT_CD, NT_TITLE, NT_CONT, NT_ENDT, NT_HIT, NT_WT, FILE_CD
		FROM   NOTICE
		WHERE  1=1
		AND    (
				NT_TITLE LIKE '%' || #{ntTitle} || '%'
				OR NT_CONT LIKE '%' || #{ntCont} || '%'
				)
		ORDER BY NT_ENDT DESC
	
	</select>
	  -->
	 
	 <!-- 공지사항 상세 -->
	 <select id="noticeDetail" resultType="noticeVO">
	 	SELECT 
	 			NT_CD
	 		  , NT_TITLE
	 		  , NT_CONT
	 		  , NT_ENDT
	 		  , NT_HIT
	 		  , NT_WT
	 		  , FILE_CD
	 	FROM    NOTICE
	 	WHERE   NT_CD=#{ntCd}
	 </select>
	 
	 <!-- 공지사항 삭제 -->
	 <delete id="noticeDelete" parameterType="string">
	 	DELETE 
	 	FROM   NOTICE
		WHERE  NT_CD = #{ntCd}
	 </delete>
	 
	 <!-- 공지사항 수정 -->
	 <update id="noticeUpdate" parameterType="noticeVO">
	 	UPDATE NOTICE
		SET    NT_CD = #{ntCd}
			 , NT_TITLE = #{ntTitle}
		     , NT_CONT = #{ntCont}
		     , NT_ENDT = SYSDATE
		     , NT_HIT = #{ntHit}
		     , NT_WT = '관리자'
		     , FILE_CD = #{fileCd}
		WHERE  NT_CD = #{ntCd}
	 </update>
	 
	 <!-- 공지사항 추가 -->
	<insert id="noticeInsert" parameterType="noticeVO">
	 	INSERT INTO NOTICE
	 		       (NT_CD
	 		      , NT_TITLE
	 		      , NT_CONT
	 		      , NT_ENDT
	 		      , NT_HIT
	 		      , NT_WT
	 		      , FILE_CD)
	 	VALUES
	 		      ( (SELECT NVL(MAX(to_number(NT_CD)),0)+1 FROM NOTICE)
	 		      , #{ntTitle}
	 		      , #{ntCont}
	 		      , SYSDATE
	 		      , #{ntHit}
	 		      , '관리자'
	 		      , #{fileCd})
	 </insert> 
	 
	 <!-- 게시판 조회수 -->
     <update id="noticeHit" parameterType="string">
     	UPDATE NOTICE SET
     	NT_HIT = NT_HIT+1
     	WHERE NT_CD = #{ntCd}
     </update>
</mapper>









